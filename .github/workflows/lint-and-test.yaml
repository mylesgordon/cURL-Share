name: "Test & Lint"

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  backend:
    name: backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Create database
        run: |
          cargo install sqlx-cli --no-default-features --features native-tls,sqlite || true
          make initdatabase
      - name: Build
        run: cargo build --verbose
      - name: Clippy
        run: cargo clippy --verbose
      - name: Run tests
        run: cargo test --verbose
  
  frontend:
    name: frontend
    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache-dependency-path: 'frontend/yarn.lock'
          cache: yarn

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install 
          dir: ${{ env.working-directory }}
      
      - name: Lint
        uses: borales/actions-yarn@v4
        with:
          cmd: lint 
          dir: ${{ env.working-directory }}

      - name: Unit test
        uses: borales/actions-yarn@v4
        with:
          cmd: test:unit 
          dir: ${{ env.working-directory }}
